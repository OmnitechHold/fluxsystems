{
  "name": "kubernetes-config-example",
  "version": "1.0.0",
  "private": true,
  "description": "Example Kubernetes configuration with advanced orchestration features",
  "scripts": {
    "k8s:apply": "kubectl apply -f k8s/",
    "k8s:delete": "kubectl delete -f k8s/",
    "k8s:deploy": "skaffold dev",
    "helm:install": "helm install my-app ./helm",
    "helm:upgrade": "helm upgrade my-app ./helm",
    "istio:install": "istioctl install --set profile=demo",
    "istio:verify": "istioctl verify-install"
  },
  "dependencies": {
    "@kubernetes/client-node": "^0.18.1",
    "kubernetes-client": "^9.0.0"
  },
  "devDependencies": {
    "@types/node": "^20.2.5",
    "typescript": "^5.0.4"
  },
  "kubernetes": {
    "namespace": "my-app",
    "deployment": {
      "name": "my-app",
      "replicas": 3,
      "strategy": {
        "type": "RollingUpdate",
        "rollingUpdate": {
          "maxSurge": 1,
          "maxUnavailable": 0
        }
      },
      "containers": {
        "app": {
          "image": "my-app:latest",
          "ports": [
            {
              "containerPort": 3000
            }
          ],
          "resources": {
            "requests": {
              "cpu": "100m",
              "memory": "128Mi"
            },
            "limits": {
              "cpu": "200m",
              "memory": "256Mi"
            }
          },
          "livenessProbe": {
            "httpGet": {
              "path": "/health",
              "port": 3000
            },
            "initialDelaySeconds": 30,
            "periodSeconds": 10
          },
          "readinessProbe": {
            "httpGet": {
              "path": "/ready",
              "port": 3000
            },
            "initialDelaySeconds": 5,
            "periodSeconds": 5
          }
        }
      }
    },
    "service": {
      "type": "ClusterIP",
      "ports": [
        {
          "port": 80,
          "targetPort": 3000
        }
      ]
    },
    "ingress": {
      "annotations": {
        "kubernetes.io/ingress.class": "nginx",
        "cert-manager.io/cluster-issuer": "letsencrypt-prod"
      },
      "rules": [
        {
          "host": "app.example.com",
          "http": {
            "paths": [
              {
                "path": "/",
                "pathType": "Prefix",
                "backend": {
                  "service": {
                    "name": "my-app",
                    "port": {
                      "number": 80
                    }
                  }
                }
              }
            ]
          }
        }
      ],
      "tls": [
        {
          "hosts": ["app.example.com"],
          "secretName": "app-tls"
        }
      ]
    },
    "horizontalPodAutoscaler": {
      "minReplicas": 2,
      "maxReplicas": 10,
      "targetCPUUtilizationPercentage": 80
    },
    "networkPolicy": {
      "ingress": [
        {
          "from": [
            {
              "namespaceSelector": {
                "matchLabels": {
                  "name": "default"
                }
              }
            }
          ],
          "ports": [
            {
              "protocol": "TCP",
              "port": 80
            }
          ]
        }
      ]
    },
    "configMap": {
      "data": {
        "APP_ENV": "production",
        "API_URL": "https://api.example.com"
      }
    },
    "secret": {
      "type": "Opaque",
      "data": {
        "API_KEY": "${env:API_KEY}",
        "DB_PASSWORD": "${env:DB_PASSWORD}"
      }
    },
    "persistentVolumeClaim": {
      "accessModes": ["ReadWriteOnce"],
      "resources": {
        "requests": {
          "storage": "10Gi"
        }
      },
      "storageClassName": "standard"
    },
    "serviceAccount": {
      "annotations": {
        "eks.amazonaws.com/role-arn": "arn:aws:iam::123456789012:role/my-app-role"
      }
    },
    "istio": {
      "virtualService": {
        "hosts": ["app.example.com"],
        "gateways": ["app-gateway"],
        "http": [
          {
            "route": [
              {
                "destination": {
                  "host": "my-app",
                  "subset": "v1",
                  "port": {
                    "number": 80
                  }
                },
                "weight": 90
              },
              {
                "destination": {
                  "host": "my-app",
                  "subset": "v2",
                  "port": {
                    "number": 80
                  }
                },
                "weight": 10
              }
            ]
          }
        ]
      },
      "destinationRule": {
        "host": "my-app",
        "trafficPolicy": {
          "loadBalancer": {
            "simple": "ROUND_ROBIN"
          }
        },
        "subsets": [
          {
            "name": "v1",
            "labels": {
              "version": "v1"
            }
          },
          {
            "name": "v2",
            "labels": {
              "version": "v2"
            }
          }
        ]
      }
    },
    "monitoring": {
      "serviceMonitor": {
        "selector": {
          "matchLabels": {
            "app": "my-app"
          }
        },
        "endpoints": [
          {
            "port": "metrics",
            "interval": "15s"
          }
        ]
      }
    }
  },
  "helm": {
    "name": "my-app",
    "version": "1.0.0",
    "dependencies": [
      {
        "name": "postgresql",
        "version": "12.1.3",
        "repository": "https://charts.bitnami.com/bitnami"
      },
      {
        "name": "redis",
        "version": "17.3.14",
        "repository": "https://charts.bitnami.com/bitnami"
      }
    ],
    "values": {
      "global": {
        "imageRegistry": "my-registry.azurecr.io",
        "imagePullSecrets": ["registry-secret"]
      }
    }
  },
  "engines": {
    "node": ">=16.0.0",
    "npm": ">=8.0.0"
  }
}
