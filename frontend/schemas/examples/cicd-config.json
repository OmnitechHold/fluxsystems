{
  "name": "cicd-config-example",
  "version": "1.0.0",
  "private": true,
  "description": "Example CI/CD configuration with Jenkins, GitLab CI, and CircleCI",
  "scripts": {
    "test": "jest",
    "test:coverage": "jest --coverage",
    "lint": "eslint .",
    "build": "tsc && vite build",
    "build:docker": "docker build -t my-app .",
    "deploy:staging": "kubectl apply -f k8s/staging/",
    "deploy:prod": "kubectl apply -f k8s/prod/",
    "rollback": "kubectl rollout undo deployment/my-app"
  },
  "jenkins": {
    "pipeline": {
      "agent": {
        "docker": {
          "image": "node:16-alpine"
        }
      },
      "stages": {
        "Checkout": {
          "steps": [
            "checkout scm"
          ]
        },
        "Install": {
          "steps": [
            "npm ci"
          ]
        },
        "Lint": {
          "steps": [
            "npm run lint"
          ]
        },
        "Test": {
          "steps": [
            "npm run test:coverage"
          ]
        },
        "Build": {
          "steps": [
            "npm run build",
            "docker build -t my-app:${BUILD_NUMBER} ."
          ]
        },
        "Security Scan": {
          "steps": [
            "snyk test",
            "snyk container test my-app:${BUILD_NUMBER}"
          ]
        },
        "Deploy to Staging": {
          "when": "branch 'develop'",
          "steps": [
            "kubectl apply -f k8s/staging/"
          ]
        },
        "Deploy to Production": {
          "when": "branch 'main'",
          "steps": [
            "kubectl apply -f k8s/prod/"
          ]
        }
      },
      "post": {
        "always": [
          "junit 'reports/**/*.xml'",
          "publishHTML target: [allowMissing: false, alwaysLinkToLastBuild: true, keepAll: true, reportDir: 'coverage', reportFiles: 'index.html', reportName: 'Coverage Report']"
        ],
        "failure": [
          "slack channel: '#alerts', message: 'Pipeline failed!'"
        ]
      }
    }
  },
  "gitlab-ci": {
    "image": "node:16-alpine",
    "stages": [
      "test",
      "build",
      "scan",
      "deploy"
    ],
    "cache": {
      "paths": [
        "node_modules/"
      ]
    },
    "test": {
      "stage": "test",
      "script": [
        "npm ci",
        "npm run lint",
        "npm run test:coverage"
      ],
      "artifacts": {
        "reports": {
          "junit": "reports/junit.xml",
          "coverage_report": {
            "coverage_format": "cobertura",
            "path": "coverage/cobertura-coverage.xml"
          }
        }
      }
    },
    "build": {
      "stage": "build",
      "script": [
        "npm run build",
        "docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA ."
      ]
    },
    "security_scan": {
      "stage": "scan",
      "script": [
        "snyk test",
        "snyk container test $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
      ]
    },
    "deploy_staging": {
      "stage": "deploy",
      "script": [
        "kubectl apply -f k8s/staging/"
      ],
      "environment": {
        "name": "staging"
      },
      "only": [
        "develop"
      ]
    },
    "deploy_production": {
      "stage": "deploy",
      "script": [
        "kubectl apply -f k8s/prod/"
      ],
      "environment": {
        "name": "production"
      },
      "only": [
        "main"
      ]
    }
  },
  "circleci": {
    "version": 2.1,
    "orbs": {
      "node": "circleci/node@5.0.0",
      "docker": "circleci/docker@2.1.1",
      "kubernetes": "circleci/kubernetes@1.3.0"
    },
    "jobs": {
      "test": {
        "docker": [
          {
            "image": "cimg/node:16.14"
          }
        ],
        "steps": [
          "checkout",
          "node/install-packages",
          "run: npm run lint",
          "run: npm run test:coverage",
          "store_test_results",
          "store_artifacts"
        ]
      },
      "build": {
        "docker": [
          {
            "image": "cimg/node:16.14"
          }
        ],
        "steps": [
          "checkout",
          "node/install-packages",
          "run: npm run build",
          "docker/build"
        ]
      },
      "deploy_staging": {
        "docker": [
          {
            "image": "cimg/node:16.14"
          }
        ],
        "steps": [
          "checkout",
          "kubernetes/install",
          "kubernetes/create-or-update-resource"
        ]
      },
      "deploy_production": {
        "docker": [
          {
            "image": "cimg/node:16.14"
          }
        ],
        "steps": [
          "checkout",
          "kubernetes/install",
          "kubernetes/create-or-update-resource"
        ]
      }
    },
    "workflows": {
      "version": 2,
      "build_test_deploy": {
        "jobs": [
          "test",
          {
            "build": {
              "requires": [
                "test"
              ]
            }
          },
          {
            "deploy_staging": {
              "requires": [
                "build"
              ],
              "filters": {
                "branches": {
                  "only": "develop"
                }
              }
            }
          },
          {
            "deploy_production": {
              "requires": [
                "build"
              ],
              "filters": {
                "branches": {
                  "only": "main"
                }
              }
            }
          }
        ]
      }
    }
  },
  "engines": {
    "node": ">=16.0.0",
    "npm": ">=8.0.0"
  }
}
