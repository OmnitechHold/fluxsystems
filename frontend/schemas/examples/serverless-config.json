{
  "name": "serverless-config-example",
  "version": "1.0.0",
  "private": true,
  "description": "Example Serverless configuration with AWS Lambda, Azure Functions, and GCP Cloud Functions",
  "scripts": {
    "dev": "serverless offline",
    "deploy": "serverless deploy",
    "deploy:prod": "serverless deploy --stage prod",
    "remove": "serverless remove",
    "logs": "serverless logs",
    "test": "jest",
    "lint": "eslint .",
    "build": "tsc",
    "watch": "tsc -w",
    "package": "serverless package",
    "warmup": "serverless warmup",
    "metrics": "serverless metrics",
    "info": "serverless info"
  },
  "dependencies": {
    "@aws-sdk/client-dynamodb": "^3.332.0",
    "@aws-sdk/client-s3": "^3.332.0",
    "@aws-sdk/client-sqs": "^3.332.0",
    "@azure/functions": "^3.5.1",
    "@google-cloud/functions-framework": "^3.1.3",
    "@middy/core": "^4.4.3",
    "@middy/http-json-body-parser": "^4.4.3",
    "@middy/validator": "^4.4.3",
    "aws-lambda": "^1.0.7",
    "winston": "^3.8.2"
  },
  "devDependencies": {
    "@serverless/typescript": "^3.30.1",
    "@types/aws-lambda": "^8.10.115",
    "@types/jest": "^29.5.1",
    "@types/node": "^20.2.5",
    "esbuild": "^0.17.19",
    "eslint": "^8.41.0",
    "jest": "^29.5.0",
    "serverless": "^3.31.0",
    "serverless-dotenv-plugin": "^6.0.0",
    "serverless-esbuild": "^1.44.0",
    "serverless-offline": "^12.0.4",
    "serverless-plugin-typescript": "^2.1.4",
    "serverless-prune-plugin": "^2.0.2",
    "serverless-step-functions": "^3.13.1",
    "serverless-webpack": "^5.11.0",
    "ts-jest": "^29.1.0",
    "typescript": "^5.0.4"
  },
  "serverless": {
    "service": "my-serverless-app",
    "frameworkVersion": "3",
    "plugins": [
      "serverless-typescript",
      "serverless-offline",
      "serverless-dotenv-plugin",
      "serverless-prune-plugin",
      "serverless-step-functions"
    ],
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "stage": "${opt:stage, 'dev'}",
      "region": "${opt:region, 'us-west-2'}",
      "memorySize": 1024,
      "timeout": 29,
      "logRetentionInDays": 14,
      "environment": {
        "NODE_ENV": "${self:provider.stage}"
      },
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:*",
                "s3:*",
                "sqs:*",
                "sns:*"
              ],
              "Resource": "*"
            }
          ]
        }
      },
      "tags": {
        "Environment": "${self:provider.stage}",
        "Project": "${self:service}"
      }
    },
    "package": {
      "individually": true,
      "patterns": [
        "!node_modules/**",
        "!.git/**",
        "!test/**"
      ]
    },
    "functions": {
      "api": {
        "handler": "src/handlers/api.handler",
        "events": [
          {
            "http": {
              "method": "ANY",
              "path": "/{proxy+}",
              "cors": true
            }
          }
        ],
        "environment": {
          "API_VERSION": "1.0.0"
        }
      },
      "worker": {
        "handler": "src/handlers/worker.handler",
        "events": [
          {
            "sqs": {
              "arn": "${self:custom.sqsArn}",
              "batchSize": 10
            }
          }
        ]
      },
      "cron": {
        "handler": "src/handlers/cron.handler",
        "events": [
          {
            "schedule": "rate(5 minutes)"
          }
        ]
      }
    },
    "resources": {
      "Resources": {
        "UsersTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "${self:service}-${self:provider.stage}-users",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        },
        "FilesBucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "BucketName": "${self:service}-${self:provider.stage}-files"
          }
        }
      }
    },
    "custom": {
      "webpack": {
        "webpackConfig": "webpack.config.js",
        "packager": "npm",
        "includeModules": true
      },
      "prune": {
        "automatic": true,
        "number": 3
      },
      "sqsArn": {
        "Fn::GetAtt": ["WorkerQueue", "Arn"]
      }
    }
  },
  "engines": {
    "node": ">=16.0.0",
    "npm": ">=8.0.0"
  }
}
